{"id":"node_modules/graphql/validation/validate.mjs","dependencies":[{"name":"/Users/asketes/jsc/node_modules/graphql/package.json","includedInParent":true,"mtime":1521233986000},{"name":"/Users/asketes/jsc/package.json","includedInParent":true,"mtime":1532879252421},{"name":"../jsutils/invariant","loc":{"line":10,"column":22},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/jsutils/invariant.mjs"},{"name":"../error","loc":{"line":11,"column":29},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/error/index.mjs"},{"name":"../language/visitor","loc":{"line":12,"column":58},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/language/visitor.mjs"},{"name":"../type/schema","loc":{"line":14,"column":30},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/type/schema.mjs"},{"name":"../type/validate","loc":{"line":15,"column":34},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/type/validate.mjs"},{"name":"../utilities/TypeInfo","loc":{"line":16,"column":25},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/utilities/TypeInfo.mjs"},{"name":"./specifiedRules","loc":{"line":17,"column":31},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/validation/specifiedRules.mjs"},{"name":"./ValidationContext","loc":{"line":18,"column":30},"parent":"/Users/asketes/jsc/node_modules/graphql/validation/validate.mjs","resolved":"/Users/asketes/jsc/node_modules/graphql/validation/ValidationContext.mjs"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _schema = require('../type/schema');\n\nvar _validate = require('../type/validate');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nvar _specifiedRules = require('./specifiedRules');\n\nvar _ValidationContext = require('./ValidationContext');\n\nvar _ValidationContext2 = _interopRequireDefault(_ValidationContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction validate(schema, ast, rules, typeInfo) {\n  !ast ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  // If the schema used for validation is invalid, throw an error.\n  (0, _validate.assertValidSchema)(schema);\n  return visitUsingRules(schema, typeInfo || new _TypeInfo.TypeInfo(schema), ast, rules || _specifiedRules.specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new _ValidationContext2.default(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitWithTypeInfo)(typeInfo, (0, _visitor.visitInParallel)(visitors)));\n  return context.getErrors();\n}","map":{"mappings":[{"name":"validate","generated":{"line":6,"column":8},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":16}},{"name":"validate","generated":{"line":6,"column":19},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":16}},{"generated":{"line":8,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":11,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":12,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":14,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":15,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":20,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":1,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"name":"validate","generated":{"line":55,"column":9},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":16}},{"generated":{"line":55,"column":17},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"name":"schema","generated":{"line":55,"column":18},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":25}},{"generated":{"line":55,"column":24},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"name":"ast","generated":{"line":55,"column":26},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":33}},{"generated":{"line":55,"column":29},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"name":"rules","generated":{"line":55,"column":31},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":38}},{"generated":{"line":55,"column":36},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"name":"typeInfo","generated":{"line":55,"column":38},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":45}},{"generated":{"line":55,"column":46},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":7}},{"generated":{"line":55,"column":48},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":36,"column":55}},{"generated":{"line":56,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":2}},{"name":"ast","generated":{"line":56,"column":3},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":3}},{"generated":{"line":56,"column":6},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":2}},{"generated":{"line":56,"column":9},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":9}},{"generated":{"line":56,"column":34},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":19}},{"generated":{"line":56,"column":35},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":9}},{"generated":{"line":56,"column":37},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":22}},{"generated":{"line":56,"column":60},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":9}},{"generated":{"line":56,"column":61},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":2}},{"generated":{"line":56,"column":64},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":49}},{"generated":{"line":56,"column":69},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":54}},{"generated":{"line":56,"column":70},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":37,"column":2}},{"generated":{"line":57,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":38,"column":2}},{"generated":{"line":58,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":39,"column":2}},{"name":"schema","generated":{"line":58,"column":35},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":39,"column":20}},{"generated":{"line":58,"column":41},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":39,"column":2}},{"generated":{"line":59,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":2}},{"name":"visitUsingRules","generated":{"line":59,"column":9},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":9}},{"name":"schema","generated":{"line":59,"column":25},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":25}},{"generated":{"line":59,"column":31},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":9}},{"name":"typeInfo","generated":{"line":59,"column":33},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":33}},{"generated":{"line":59,"column":45},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":45}},{"name":"TypeInfo","generated":{"line":59,"column":49},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":49}},{"generated":{"line":59,"column":67},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":45}},{"name":"schema","generated":{"line":59,"column":68},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":58}},{"generated":{"line":59,"column":74},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":45}},{"generated":{"line":59,"column":75},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":9}},{"name":"ast","generated":{"line":59,"column":77},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":67}},{"generated":{"line":59,"column":80},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":9}},{"name":"rules","generated":{"line":59,"column":82},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":72}},{"name":"specifiedRules","generated":{"line":59,"column":91},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":81}},{"generated":{"line":59,"column":121},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":9}},{"generated":{"line":59,"column":122},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":40,"column":2}},{"generated":{"line":60,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":41,"column":1}},{"generated":{"line":62,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":43,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"name":"visitUsingRules","generated":{"line":68,"column":9},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":9}},{"generated":{"line":68,"column":24},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"name":"schema","generated":{"line":68,"column":25},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":25}},{"generated":{"line":68,"column":31},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"name":"typeInfo","generated":{"line":68,"column":33},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":33}},{"generated":{"line":68,"column":41},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"name":"documentAST","generated":{"line":68,"column":43},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":43}},{"generated":{"line":68,"column":54},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"name":"rules","generated":{"line":68,"column":56},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":56}},{"generated":{"line":68,"column":61},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":0}},{"generated":{"line":68,"column":63},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":49,"column":63}},{"generated":{"line":69,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":2}},{"name":"context","generated":{"line":69,"column":6},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":6}},{"generated":{"line":69,"column":16},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":16}},{"name":"ValidationContext","generated":{"line":69,"column":20},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":20}},{"generated":{"line":69,"column":47},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":16}},{"name":"schema","generated":{"line":69,"column":48},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":38}},{"generated":{"line":69,"column":54},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":16}},{"name":"documentAST","generated":{"line":69,"column":56},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":46}},{"generated":{"line":69,"column":67},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":16}},{"name":"typeInfo","generated":{"line":69,"column":69},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":59}},{"generated":{"line":69,"column":77},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":16}},{"generated":{"line":69,"column":78},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":50,"column":2}},{"generated":{"line":70,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":2}},{"name":"visitors","generated":{"line":70,"column":6},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":6}},{"name":"rules","generated":{"line":70,"column":17},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":17}},{"name":"map","generated":{"line":70,"column":23},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":23}},{"generated":{"line":70,"column":26},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":17}},{"generated":{"line":70,"column":27},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":27}},{"name":"rule","generated":{"line":70,"column":37},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":37}},{"generated":{"line":70,"column":41},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":27}},{"generated":{"line":70,"column":43},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":43}},{"generated":{"line":71,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":52,"column":4}},{"name":"rule","generated":{"line":71,"column":11},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":52,"column":11}},{"name":"context","generated":{"line":71,"column":16},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":52,"column":16}},{"generated":{"line":71,"column":23},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":52,"column":11}},{"generated":{"line":71,"column":24},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":52,"column":4}},{"generated":{"line":72,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":53,"column":3}},{"generated":{"line":72,"column":3},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":17}},{"generated":{"line":72,"column":4},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":51,"column":2}},{"generated":{"line":73,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":54,"column":2}},{"generated":{"line":74,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":2}},{"name":"documentAST","generated":{"line":74,"column":22},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":8}},{"generated":{"line":74,"column":33},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":2}},{"generated":{"line":74,"column":35},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":21}},{"name":"typeInfo","generated":{"line":74,"column":67},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":39}},{"generated":{"line":74,"column":75},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":21}},{"generated":{"line":74,"column":77},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":49}},{"name":"visitors","generated":{"line":74,"column":107},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":65}},{"generated":{"line":74,"column":115},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":49}},{"generated":{"line":74,"column":116},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":21}},{"generated":{"line":74,"column":117},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":55,"column":2}},{"generated":{"line":75,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":56,"column":2}},{"name":"context","generated":{"line":75,"column":9},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":56,"column":9}},{"name":"getErrors","generated":{"line":75,"column":17},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":56,"column":17}},{"generated":{"line":75,"column":26},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":56,"column":9}},{"generated":{"line":75,"column":28},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":56,"column":2}},{"generated":{"line":76,"column":0},"source":"node_modules/graphql/validation/validate.mjs","original":{"line":57,"column":1}}],"sources":{"node_modules/graphql/validation/validate.mjs":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\nimport { GraphQLError } from '../error';\nimport { visit, visitInParallel, visitWithTypeInfo } from '../language/visitor';\n\nimport { GraphQLSchema } from '../type/schema';\nimport { assertValidSchema } from '../type/validate';\nimport { TypeInfo } from '../utilities/TypeInfo';\nimport { specifiedRules } from './specifiedRules';\nimport ValidationContext from './ValidationContext';\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nexport function validate(schema, ast, rules, typeInfo) {\n  !ast ? invariant(0, 'Must provide document') : void 0;\n  // If the schema used for validation is invalid, throw an error.\n  assertValidSchema(schema);\n  return visitUsingRules(schema, typeInfo || new TypeInfo(schema), ast, rules || specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new ValidationContext(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  visit(documentAST, visitWithTypeInfo(typeInfo, visitInParallel(visitors)));\n  return context.getErrors();\n}"},"lineCount":null}},"hash":"02669e40a6e98290e1c77cd7dc72edd4","cacheData":{"env":{}}}